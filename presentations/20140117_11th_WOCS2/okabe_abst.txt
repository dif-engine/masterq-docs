# 著者
氏名: 岡部 究 (おかべ きわむ)
所属: Metasepi Project
部門: Ajhc Haskellコンパイラ開発チーム
住所: 〒226-0025 神奈川県横浜市緑区十日市場町1258 5-6-306
TEL: 090-3524-7064
FAX: なし
E-Mail: kiwamu@debian.or.jp
twitter: @master_q

# 発表概要 (1000文字以上、図表必須)
1. 表題:
強い型によるOSの開発手法の提案

2. キーワード:
安全

3. 主張したい点:
OSのようなこれまで手書きC言語によって設計されてされていた低レイヤーの設計を
Haskell言語によって強い型を使って設計する手法を提案します。
発表者の所属するMetasepi Project(参考文献1)ではこの手法を実現するためにAjhc Haskellコンパイラ(参考文献2)を開発しています。
Ajhcを使うことでメモリ数十kBのマイコン上でのプログラミングにHaskell言語を用いることが世界ではじめて可能になりました。

4. 想定する聴衆:
C言語で設計しているOS低レイヤーに関する知識。Haskell言語のような型推論を持つ言語に関する知識。

5. 概要
(1) 背景
MLやHaskellに代表される型推論を持つ静的型付け言語が注目されています。
これらの言語を用いることで、実行時エラーを減少させ、ソフトウェアの設計工数をより予測可能にさせることができます。(参考文献3)
POSIX上のアプリケーションドメインでは、これらの言語の有用性は実証されつつあります。
一方、OSのような低レイヤーのドメインの設計は旧来からのC言語にたよっています。

(2) 課題
OSドメインの設計には細心の注意が求められます。
アプリケーションの不具合はセグメンテーションフォールトで済みますが、OSの不具合は容易にシステム停止をひきおこすからです。
C言語によるOS設計は不具合を誘発するため工数がかさみ、またその工数は予測可能ではありませんでした。
OCamlやHaskellのような型推論を持つ言語を用いてOSを書くこころみもありますが、成功しているとは言えない状況です。
(参考文献4,5,6)

(3) 内容 (着想や創案など)
そこで我々は「スナッチ設計」という設計手法を提案します。(添付図)
まず既存のC言語による低レイヤーの設計を用意し、その実装にAjhc Haskellコンパイラ(参考文献5)のランタイムを付属させます。
この段階で当該のC言語プログラムにHaskellコードを追加することが可能になりました。
その後、既存のC言語プログラムのどれか一部品に着目し、その部品の設計をHaskell言語で置換、元の部品をプログラムから削除します。
この設計サイクルを繰り返すことで、C言語の設計をコンパイル可能/動作可能な状態を保ちながらHaskell言語による設計へと段階的に置換することができます。
本発表ではこのAjhcコンパイラの概要と、設計置換手法の具体的内容をご説明します。

(4) 効果
Haskell言語による強い型を用いた設計をコンピュータアーキティクチャの全てのドメインに適用することが可能になります。
また、C言語からHaskell言語への設計置換におけるどの段階においても実行可能な実装を得ることができます。
ほぼ完全にHaskell言語化することも可能です。C言語とHaskell言語の設計を共存させることも可能です。
現在はRAM 40kBのARM Cortex-M3マイコン上で動作するプログラムをHaskell言語で設計した実績があります。
(参考文献7)

(5) 参考文献
参考文献1: Metasepi Project http://metasepi.org/
参考文献2: Ajhc Haskellコンパイラ http://ajhc.metasepi.org/
参考文献3: 数理科学的バグ撲滅方法論のすすめ
http://itpro.nikkeibp.co.jp/article/COLUMN/20060915/248230/
参考文献4: Funk - The Functional Kernel http://home.gna.org/funk/
参考文献5: snowflake-os - An O'Caml Operating System
https://code.google.com/p/snowflake-os/
参考文献6: House http://programatica.cs.pdx.edu/House/
参考文献7: https://github.com/ajhc/demo-cortex-m3